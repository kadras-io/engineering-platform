#@data/values-schema

---

#@schema/desc "Configuration for the platform packages."
platform:
  #@schema/desc "The platform profile to install. Options: `full`, `serving`."
  #@schema/validation one_of=["full", "serving"]
  profile: full
  #@schema/desc "The type of supply chain to deploy. Options: `basic`, `advanced`."
  #@schema/validation one_of=["basic", "advanced"]
  supply_chain: basic
  #@schema/desc "The namespace where to install the platform."
  namespace: kadras-packages
  #@schema/desc "A list of packages to exclude from being installed."
  excluded_packages:
    - ""

  #@schema/desc "PEM-encoded certificate data to trust TLS connections with a custom CA."
  ca_cert_data: ""

  #@schema/desc "The underlying infrastructure provider. Options are `local` and `vsphere`. This field is not required, but it enables better validation and defaulting if provided."
  #@schema/validation one_of=["local", "vsphere"]
  #@schema/nullable
  infrastructure_provider: ""

  #@schema/desc "Setting for the Ingress controller that the platform will use."
  ingress:
    #@schema/desc "The base domain name the platform will use to configure the Ingress controller. It must be a valid DNS name."
    domain: ""
    #@schema/desc "A reference to the ClusterIssuer the platform will use to enable TLS communications."
    issuer:
      #@schema/desc "The type of ClusterIssuer the platform will use to enable TLS communications. Options: `private`, `letsencrypt_staging`, `letsencrypt`, `custom`."
      #@schema/validation one_of=["private", "letsencrypt_staging", "letsencrypt", "custom"]
      type: private
      #@schema/desc "A reference to a custom ClusterIssuer previously created on the cluster where the platform will be installed. Required when the type is `custom`."
      #@schema/validation when=lambda _, ctx: ctx.parent["type"] == "custom"
      name: ""
      #@schema/desc "The email address that Let's Encrypt will use to send info on expiring certificates or other issues. Required when the type is `letsencrypt_staging` or `letsencrypt`."
      #@schema/validation when=lambda _, ctx: ctx.parent["type"] == "letsencrypt_staging" or ctx.parent["type"] == "letsencrypt"
      email: ""

  #@schema/desc "Settings for the OCI registry that the platform will use."
  oci_registry:
    #@schema/desc "The server of the OCI Registry where the platform will publish and consume OCI images."
    #@schema/examples ("GitHub Container Registry", "ghcr.io")
    server: ""
    #@schema/desc "The repository in the OCI Registry where the platform will publish and consume OCI images."
    #@schema/examples ("Repository on GitHub Container Registry", "my-org")
    repository: ""
    #@schema/desc "Configuration for the Secret holding the credentials to access the OCI registry."
    secret:
      #@schema/desc "The name of the Secret holding the credentials to access the OCI registry."
      name: supply-chain-registry-credentials
      #@schema/desc "The namespace of the Secret holding the credentials to access the OCI registry."
      namespace: kadras-packages

  #@schema/desc "Settings for Cosign, used for signing and verifying OCI artifacts."
  cosign:
    #@schema/desc "Configuration for the Secret holding the Cosign key pair."
    secret:
      #@schema/desc "The name of the Secret holding the Cosign key pair."
      name: supply-chain-cosign-key-pair
      #@schema/desc "The namespace of the Secret holding the Cosign key pair."
      namespace: kadras-packages
  
  #@schema/desc "Settings for the Git server that the platform will use."
  git:
    #@schema/desc "The server hosting the Git repositories used by the plaform."
    #@schema/examples ("GitHub", "https://github.com")
    server: https://github.com
    #@schema/desc "Configuration for the Secret holding the credentials to access the Git server."
    secret:
      #@schema/desc "The name of the Secret holding the credentials to access the Git server."
      name: supply-chain-git-credentials
      #@schema/desc "The namespace of the Secret holding the credentials to access the Git server."
      namespace: kadras-packages

#@schema/desc "Configuration for Buildpacks related packages."
buildpacks:
  #@schema/desc "Configuration for the Buildpacks Catalog package."
  #@schema/type any=True
  catalog: {}
  #@schema/desc "Configuration for the Kpack package."
  #@schema/type any=True
  kpack: {}

#@schema/desc "Configuration for Cartographer related packages."
cartographer:
  #@schema/desc "Configuration for the Cartographer Core package including Cartographer and Cartographer Conventions."
  #@schema/type any=True
  core: {}
  #@schema/desc "Configuration for the Cartographer Blueprints package."
  #@schema/type any=True
  blueprints: {}
  #@schema/desc "Configuration for the Cartographer Delivery package."
  #@schema/type any=True
  delivery: {}
  #@schema/desc "Configuration for the Cartographer Supply Chains package."
  #@schema/type any=True
  supply_chains: {}

#@schema/desc "Configuration for the Cert Manager related packages."
cert_manager:
  #@schema/desc "Configuration for the Cert Manager package."
  #@schema/type any=True
  core: {}
  #@schema/desc "Configuration for the Cert Manager Issuers package."
  #@schema/type any=True
  issuers: {}

#@schema/desc "Configuration for the Contour package."
#@schema/type any=True
contour: {}

#@schema/desc "Configuration for Cartographer Conventions related packages."
conventions:
  #@schema/desc "Configuration for the Spring Boot Conventions package."
  #@schema/type any=True
  spring_boot: {}

#@schema/desc "Configuration for Flux related packages."
flux:
  #@schema/desc "Configuration for the FluxCD Source Controller package."
  #@schema/type any=True
  source_controller: {}

#@schema/desc "Configuration for Knative related packages."
knative:
  #@schema/desc "Configuration for the Knative Serving package."
  #@schema/type any=True
  serving: {}

#@schema/desc "Configuration for the Kyverno related packages."
kyverno:
  #@schema/desc "Configuration for the Kyverno package."
  #@schema/type any=True
  core: {}

#@schema/desc "Configuration for the Metrics Server package."
#@schema/type any=True
metrics_server: {}

#@schema/desc "Configuration for the Secretgen Controller package."
#@schema/type any=True
secretgen_controller: {}

#@schema/desc "Configuration for Tekton related packages."
tekton:
  #@schema/desc "Configuration for the Tekton Catalog package."
  #@schema/type any=True
  catalog: {}
  #@schema/desc "Configuration for the Tekton Pipelines package."
  #@schema/type any=True
  pipelines: {}

#@schema/desc "Configuration for the Workspace Provisioner package."
#@schema/type any=True
workspace_provisioner: {}
