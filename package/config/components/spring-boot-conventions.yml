#@ load("@ytt:data", "data")
#@ load("@ytt:struct", "struct")
#@ load("@ytt:yaml", "yaml")
#@ load("/helpers.star", "is_any_profile_enabled", "is_package_enabled", "profiles")

#@ if is_package_enabled("spring-boot-conventions") and is_any_profile_enabled([profiles.standalone, profiles.dev, profiles.build]):

#@ def compute_package_values():
#@   return data.values.conventions.spring_boot
#@ end

---
apiVersion: packaging.carvel.dev/v1alpha1
kind: PackageInstall
metadata:
  name: spring-boot-conventions
  namespace: #@ data.values.platform.namespace
  annotations:
    kapp.k14s.io/change-group: spring-boot-conventions
    kapp.k14s.io/change-rule.spring-boot-conventions: upsert after upserting cartographer
    kapp.k14s.io/change-rule.serviceaccount: delete before deleting serviceaccount
spec:
  serviceAccountName: kadras-install-sa
  packageRef:
    refName: spring-boot-conventions.packages.kadras.io
    versionSelection:
      constraints: 0.4.0
  values:
    - secretRef:
        name: spring-boot-conventions-values
---
apiVersion: v1
kind: Secret
metadata:
  name: spring-boot-conventions-values
  namespace: #@ data.values.platform.namespace
stringData:
  values.yaml: #@ yaml.encode(compute_package_values())

#@ end