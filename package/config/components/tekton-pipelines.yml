#@ load("@ytt:data", "data")
#@ load("@ytt:struct", "struct")
#@ load("@ytt:yaml", "yaml")
#@ load("/helpers.star", "is_any_profile_enabled", "is_package_enabled", "profiles")

#@ if is_package_enabled("tekton-pipelines") and is_any_profile_enabled([profiles.full, profiles.dev, profiles.build]):

#@ def compute_package_values():
#@   values = struct.decode(data.values.tekton.pipelines)
#@
#@   #! Compute values for CA Certificates
#@   if data.values.platform.ca_cert_data:
#@     values["ca_cert_data"] = values["ca_cert_data"] + data.values.platform.ca_cert_data
#@   end
#@
#@   return struct.encode(values)
#@ end

---
apiVersion: packaging.carvel.dev/v1alpha1
kind: PackageInstall
metadata:
  name: tekton-pipelines
  namespace: #@ data.values.platform.namespace
  annotations:
    kapp.k14s.io/change-group: tekton-pipelines
    kapp.k14s.io/change-rule.service-account: delete before deleting serviceaccount
spec:
  serviceAccountName: kadras-install-sa
  packageRef:
    refName: tekton-pipelines.packages.kadras.io
    versionSelection:
      constraints: 0.49.0
      prereleases: {}
  values:
  - secretRef:
      name: tekton-pipelines-values
---
apiVersion: v1
kind: Secret
metadata:
  name: tekton-pipelines-values
  namespace: #@ data.values.platform.namespace
stringData:
  values.yaml: #@ yaml.encode(compute_package_values())

#@ end
